{"ast":null,"code":"//import React from 'react';\nimport axios from 'axios';\nimport { getNowPlayingMovies } from '../redux/movieSlice';\nimport { playingMovies, options } from '../utils/constant';\nimport { useDispatch } from 'react-redux';\nconst dispatch = useDispatch();\nconst nowPlayingMovies = async () => {\n  try {\n    const response = await axios.get(playingMovies, options);\n    console.log(response.data.results);\n    dispatch(getNowPlayingMovies(response.data.results));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport default nowPlayingMovies;","map":{"version":3,"names":["axios","getNowPlayingMovies","playingMovies","options","useDispatch","dispatch","nowPlayingMovies","response","get","console","log","data","results","error"],"sources":["/Users/krish/Documents/Summer 24 project/Netlfix Clone/front/src/hooks/useNowplayingmovies.js"],"sourcesContent":["//import React from 'react';\nimport axios from 'axios';\nimport { getNowPlayingMovies } from '../redux/movieSlice';\nimport { playingMovies, options } from '../utils/constant';\nimport { useDispatch } from 'react-redux';\n\nconst dispatch = useDispatch();\nconst nowPlayingMovies = async()=>{\n    try{\n      const response = await axios.get(playingMovies,options);\n       console.log(response.data.results);\n      dispatch(getNowPlayingMovies(response.data.results));\n    }catch(error){\n      console.log(error);\n    }\n  }\n  \nexport default nowPlayingMovies;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,aAAa,EAAEC,OAAO,QAAQ,mBAAmB;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,QAAQ,GAAGD,WAAW,CAAC,CAAC;AAC9B,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAS;EAC9B,IAAG;IACD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACN,aAAa,EAACC,OAAO,CAAC;IACtDM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IACnCP,QAAQ,CAACJ,mBAAmB,CAACM,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC;EACtD,CAAC,QAAMC,KAAK,EAAC;IACXJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACpB;AACF,CAAC;AAEH,eAAeP,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}